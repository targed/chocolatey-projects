name: Claude Package Update

on:
  # Run on manual trigger
  workflow_dispatch:

  # Run daily at 1 AM UTC
  schedule:
    - cron: "0 1 * * *"

jobs:
  update-packages:
    runs-on: windows-latest

    defaults:
      run:
        shell: pwsh

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full git history for potential version tagging

      # Check PowerShell version to confirm we're using PowerShell Core (7+)
      - name: Check PowerShell version
        run: |
          $PSVersionTable.PSVersion
          if ($PSVersionTable.PSVersion.Major -lt 7) {
            Write-Error "PowerShell 7 or higher is required"
            exit 1
          }

      # Install Chocolatey AU (Automatic Updater) module
      - name: Install prerequisites
        if: success()
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          powershell.exe Install-PackageProvider -Name NuGet -Force
          Install-Module AU -Force
          choco install checksum -y
          exit 0

      - name: Set up Chocolatey environment
        shell: pwsh
        run: |
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
          refreshenv
          $env:Path += ';C:\ProgramData\chocolatey\bin;C:\ProgramData\chocolatey\lib\checksum\tools'

      # Run the Claude update script
      - name: Run Claude update script
        if: success()
        # REMOVED: working-directory: ./Claude
        run: |
          # Paths are now relative to the checkout root
          Unblock-File -Path ./Claude/updateNew.ps1
          # Assuming UpdateAll.ps1 is in the root. Adjust if it's elsewhere.
          Unblock-File -Path ./UpdateAll.ps1
          # Execute the script using its path relative to the root
          ./Claude/updateNew.ps1 -debug

      # Test the Claude package if updated
      - name: Test Claude package
        if: success()
        run: .\scripts\TestClaude.ps1

      # Push to Chocolatey if Claude was updated
      - name: Push to Chocolatey (Test Mode)
        if: success() && steps.test-claude-package.outputs.updatedPackage != ''
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}
          DRY_RUN: true # Set to false when ready for production
        run: |
          $packageDir = "Claude"
          $nupkgFiles = Get-ChildItem -Path "$packageDir/*.nupkg" -ErrorAction SilentlyContinue | 
                        Where-Object { $_.LastWriteTime -gt (Get-Date).AddHours(-1) }

          if ($nupkgFiles.Count -gt 0) {
            Write-Host "Found updated Claude package to push"
            
            foreach ($nupkg in $nupkgFiles) {
              Write-Host "Pushing package: $($nupkg.FullName)"
              
              if ($env:DRY_RUN -ne "true") {
                choco push $nupkg.FullName --source=https://push.chocolatey.org/ --api-key=$env:CHOCO_API_KEY
              } else {
                Write-Host "DRY RUN: Would have pushed $($nupkg.FullName) to Chocolatey"
              }
            }
          } else {
            Write-Host "No updated Claude package found to push"
          }

      # Commit changes back to the repository
      - name: Commit changes
        if: success()
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch origin
          git add ./Claude
          git commit -m "Auto-update Claude package [skip ci]" || echo "No changes to commit"
          git push
